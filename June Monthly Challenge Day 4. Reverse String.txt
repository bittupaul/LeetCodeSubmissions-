/*
@ Bittu Paul (www.github.com/bittupaul)
Date: June 4, 2020
*/

Question: 
Write a function that reverses a string. The input string is given as an array of characters char[].
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
You may assume all the characters consist of printable ascii characters.

Example 1:
Input: ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]

Example 2:
Input: ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]

Solution:

class Solution {
    public void reverseString(char[] s) {
        
        if(s.length==0)
            return;
        
        int i = 0;
        int j = s.length-1;
        char temp;
        while(i<j){
            temp = s[i];
            s[i] = s[j];
            s[j] = temp;
            i++;
            j--;
        }
        
    }
}
/*
task: to reverse a string consisting of printable ascii character represented in char array in place

approach: 
use two pointers and initialize one at zero and another at array end.
until they cross path or meet, swap the characters they are pointing too.

Time Complexity: linear O(n) where n = size of the char array
Space Complexity: constant O(1)
*/